@using FinanceMentor.Shared
@inject HttpClient Http;
<div id="expenses-form-container" class="card">
    <div class="card-header">
        Add an expense
    </div>
    <div class="card-body">
        <EditForm Model="@expense" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="form-group">
                <label for="dateInput">Date</label>
                <InputDate class="form-control" id="dateInput" @bind-Value="expense.Date"></InputDate>
            </div>
            <div class="form-group">
                <label for="dateInput">Subject</label>
                <InputText class="form-control" id="subjectInput" @bind-Value="expense.Subject"></InputText>
            </div>
            <div class="form-group">
                <label for="categoryInput">Category</label>
                <InputSelect class="form-control" id="categoryInput" @bind-Value="expense.Category">
                    @{
                        foreach (var value in @Enum.GetValues(typeof(ExpenseCategory)))
                        {
                            <option value="@value">@value</option>
                        }
                    }
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="amountInput">Amount</label>
                <InputNumber class="form-control" id="amountInput" @bind-Value="expense.Amount"></InputNumber>
            </div>
            <div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </EditForm>
   </div>
</div>

@code {
    private ExpenseModel expense = new ExpenseModel() {Date = DateTime.Today};
    
    [Parameter]
    public EventCallback OnSubmitCallback { get; set; }

    public async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync<ExpenseModel>("api/Expenses", expense);
        await OnSubmitCallback.InvokeAsync();
    }
}
